{"version":3,"sources":["helpers/api.ts","components/User/User.tsx","components/Comment/Comment.tsx","components/CommentList.tsx","components/Post/Post.tsx","components/PostList/PostList.tsx","App.tsx","index.tsx"],"names":["API_URL","getPreparedPosts","a","Promise","all","fetch","then","response","json","posts","users","comments","map","post","user","find","currentUser","userId","id","filter","comment","postId","User","name","email","address","className","href","city","street","suite","zipcode","Comment","body","CommentList","currentComment","key","Post","title","PostList","useState","searchQuery","setSearchQuery","filterQuery","setFilterQuery","visiblePosts","useMemo","pattern","RegExp","test","setFilterQueryWithDebounce","useCallback","debounce","htmlFor","type","value","onChange","event","target","currentPost","App","setPosts","isLoaded","setIsLoaded","isLoading","setIsLoading","onClick","setTimeout","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7c837bf.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api';\n\nexport const getPosts = (): Promise<Post[]> => {\n  return fetch(`${API_URL}/posts.json`)\n    .then(response => response.json());\n};\n\nexport const getUsers = (): Promise<User[]> => {\n  return fetch(`${API_URL}/users.json`)\n    .then(response => response.json());\n};\n\nexport const getComments = (): Promise<Comment[]> => {\n  return fetch(`${API_URL}/comments.json`)\n    .then(response => response.json());\n};\n\nexport const getPreparedPosts = async (): Promise<Post[]> => {\n  const [\n    posts,\n    users,\n    comments,\n  ] = await Promise.all([getPosts(), getUsers(), getComments()]);\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(currentUser => post.userId === currentUser.id) as User,\n    comments: comments.filter(comment => post.id === comment.postId) as Comment[],\n  }));\n};\n","import React from 'react';\nimport './User.css';\n\nexport const User: React.FC<User> = ({ name, email, address }) => (\n  <div className=\"posts__user\">\n    <span className=\"posts__user-name\">\n      {`Name: ${name}`}\n    </span>\n    <a href={`mailto:${email}`} className=\"posts__user-email\">\n      {email}\n    </a>\n    <p className=\"posts__user-address\">\n      <span>{`city: ${address.city}`}</span>\n      <span>{`street: ${address.street}`}</span>\n      <span>{`suite: ${address.suite}`}</span>\n      <span>{`zip: ${address.zipcode}`}</span>\n    </p>\n  </div>\n);\n","import React from 'react';\nimport './Comment.css';\n\nexport const Comment: React.FC<Comment> = ({ name, body, email }) => (\n  <p className=\"posts__comment\">\n    <span className=\"posts__comment-name\">{name}</span>\n    <a href={`mailto:${email}`} className=\"posts__comment-email\">{email}</a>\n    <span className=\"posts__comment-text\">{body}</span>\n  </p>\n);\n","import React from 'react';\nimport { Comment } from './Comment/Comment';\n\ntype Props = {\n  comments: Comment[];\n};\n\nexport const CommentList: React.FC<Props> = ({ comments }) => (\n  <ul className=\"post__comments\">\n    {comments.map(currentComment => (\n      <Comment {...currentComment} key={currentComment.id} />\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList';\nimport './Post.css';\n\nexport const Post: React.FC<Post> = ({\n  title, body, user, comments,\n}) => (\n  <div className=\"posts__item\">\n    <h3 className=\"posts__title\">{title}</h3>\n    <p className=\"posts__text\">{body}</p>\n    <User {...user} />\n    <CommentList comments={comments} />\n  </div>\n);\n","import React, { useState, useMemo, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Post } from '../Post/Post';\nimport './PostList.css';\n\ntype Props = {\n  posts: Post[];\n};\n\nexport const PostList: React.FC<Props> = ({ posts }) => {\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [filterQuery, setFilterQuery] = useState<string>('');\n\n  const visiblePosts = useMemo(() => {\n    const pattern = new RegExp(filterQuery, 'i');\n\n    return posts.filter(({ body, title }) => pattern.test(body + title));\n  }, [posts, filterQuery]);\n\n  const setFilterQueryWithDebounce = useCallback(\n    debounce(setFilterQuery, 1000),\n    [],\n  );\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    setFilterQueryWithDebounce(event.target.value);\n  };\n\n  return (\n    <>\n      <label htmlFor=\"search\">\n        Search for posts\n        <input\n          id=\"search\"\n          type=\"text\"\n          className=\"validate\"\n          value={searchQuery}\n          onChange={handleChange}\n        />\n      </label>\n      <div>\n        <div>\n          {visiblePosts.map(currentPost => (\n            <Post {...currentPost} key={currentPost.id} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getPreparedPosts } from './helpers/api';\nimport { PostList } from './components/PostList/PostList';\n\nconst App = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadTodos = () => {\n    setIsLoaded(!isLoaded);\n\n    getPreparedPosts()\n      .then(data => {\n        setPosts(data);\n        setIsLoading(true);\n      });\n  };\n\n  const handleLoading = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      loadTodos();\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <h1 className=\"title\">Dynamic list of Posts</h1>\n      {!isLoaded ? (\n        <div className=\"button\">\n          <button type=\"button\" onClick={handleLoading}>\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        </div>\n      ) : (\n        <div className=\"app\">\n          <PostList posts={posts} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}